<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MainImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>31, 17</value>
  </metadata>
  <data name="MainImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADI
        CQAAAk1TRnQBSQFMAgEBDwEAATwBAAE8AQABEAEAARABAAT/AQUBAAj/AUIBTQF2BwABdgMAASgDAAFA
        AwABQAMAAQEBAAEEBgABCBgAAYACAAGAAwACgAEAAYADAAGAAQABgAEAAoACAAPAAQADgAMAAf8CAAH/
        AwAC/wEAAf8DAAH/AQAB/wEAAv8CAAP/BgADIh0AAyIeAAEiAQABDwb/AfABCgaqAaAOAAEiAQABDwb/
        AfABCgGqBAABqgGgDgABIgEAAQ8BLwH/AS8B/wEvAfIB8AEKAaoBBwJ3AXABqgGgDgABIgEAAQ8CIgEv
        Af8BLwHyAfABCgGqAQcCdwFwAaoBoAgAAcwCwAEMAgABIgEAAQ8C8gL/Ai8B8AEKAaoBBwJ3AXABqgGg
        CAABwAEAAcwBDAIAASIBAAEPAvIC/wEiAf8B8AEKAaoBBwJ3AXABqgGgCAABzALAAcwCAAEiAQABDwPy
        AS8BIgH/AfABCgGqAQcBxwF8AXABqgGgCAABwAEAAcABDAECASABIgEAAQ8C8gL/Ai8B8AEKAaoBAAHA
        AQwBAAGqAaAIAAHMAsABDAECAiIBAAEPAvIC/wEvAfIB8AEKAqoBygGsAqoBoA0AAiIBAAEPAf8BIgL/
        AS8B8gHwAQoCqgHKAawCqgGgDQABAgEiAQABDwb/AfABCgKqAawBygKqAaANAAECASIBAAEPBv8B8AEK
        BqoBoA4AASIfAAECIQAIiAEAASAEAAFQDAABwAQAAQgGiAGAAQIBIgMAAQUBVQsAAQwBzAQAAQgBuwMA
        AQsBuwGAAiIBIAIAAlUBUAkAAcABAAHAAgABwAEAAQgBuwEPAfAB/wELAbsBgAECASICAAEFA1UIAAEM
        AcwDAAEMAcwBAAEIAbsBDwGgAa8BCwG7AYABAAEgAgABBQNVCQABwAQAAcABAAEIAbsBDwHwAf8BCwG7
        AYAFAAJVAVAQAAEIAbsBDwHwAf8BCwG7AYAFAAEFAVUJAAECBiIBIAEIAbsDAAELAbsBgAYAAVAJAAgi
        AQgGuwGAEAAIIgiIBAABCQGZCgAIIgEIBogBgAQAApkBkAUAAQ8B/wIACCIBAAaIAQADzAHAApkBkAUA
        Af8BnwHwAQAIIgEJAQACkAEJAQABkAEAA8wBwAKZAZAFAAL/AfABAAgiAQAGkAEAAQwCzAEAAQkBmQYA
        AvwB8AEACCIBCQEAAZkDkAGZAgABzAHACQAC/wHwAQABAgYiASABAAOQAQkBAAGZAgABDCAAAf8NAAED
        AjMCAAIzATAKAAHxAfAFAAYzAQABAwIzAgACMwEwBQABDwHwAQAC/wHxAR8EAAEDBDMBMAEzATABAwIz
        AgACMwEwBQABDwEvAQAB8QMRAfADAAEDBDMBMAEzATAMAAL/ASIB8AHxAxEB8AMAAQMEMwEwATMBMAwA
        AfICIgEvAv8B8QEfBAABAwYzATAMAAHyAiIBLwIAAfEB8AQAAQMBMwQAATMBMAwAAv8BIgHwAgAB/wYA
        BjMGAAH/BwABDwEvCgABAwQzATAGAAH8AfAGAAEPAfALAAQzAgABDwT/AfwBzwIAAQ8B/woAAf8B8AIA
        AQMEAAEwAQABDwbMAfABAAH/AZ8B8AgAAQ8B+QH/AgABAwQzATABAAEPBswB8AEAAv8B8AgAAQ8C/wkA
        AQ8E/wH8Ac8CAAL8AfAIAAEPAs8OAAH8AfACAAL/AfAIAAEPAv8OAAH/JQABBAHwFQABCwK7AbAFAAFC
        AU8FAAEPAv8NAAS7BAABBAEiASQB8AQAAQ8BzAHPDAABCwS7AbADAAFCASoBIgFPBAABDwHMAc8MAAG7
        AbwCzAHLAbsDAAEiAaABogEkAfADAAEPAcwBzwsAAQsBuwG8AswBywG7AbACAAEqAQABCgEiAU8DAAEP
        AcwBzwMACP8BCwa7AbACAAGgAgABogEkAfAD/wHMAc8C/wHwAfwGzAHPAQsCuwGyASsCuwGwBQABCgEi
        AU8B/AbMAfAB/AbMAc8BCwK7AbIBKwK7AbAGAAGiASQB/AbMAfAB/AbMAc8BCwG7AbICIgErAbsBsAEP
        A/8B8AEAAQoBIgH8BswB8Aj/AQsBuwGyAiIBKwG7AbAEzAHwAgABogP/AcwBzwL/AfAJAAK7AbIBKwK7
        AQAEzAMAAQoCAAEPAcwBzwwAAQsBuwGyASsBuwGwCwABDwHMAc8NAAS7AgABDwP/AfAFAAEPAcwBzw0A
        AQsCuwGwAgAEzAHwBQABDwHMAc8TAATMBgABDwL/CwABQgFNAT4HAAE+AwABKAMAAUADAAFAAwABAQEA
        AQEGAAECFgAD/wEAAf8BwAT/AgAB/wHABgAB/wHzBgAB/wHzBgAB/wHzBgAB/wHzBgABFgHzBgABcgHz
        BgABFAHzBgABdgGTBgABFgGDBgAB/wHDBgAB/wHjBgAB/wHjBgAB/wHzAQABAQEAAQECAAH/AfsE/wIA
        Av8CAAHfAfcB/wGvAf0B/wGAAQEBjwHjAf8BrwH4Af8BgAEBAQcBwQH/Aa8B3QH3AYABAQGPAYAB/wGv
        AY8B4wGAAQEB3wGAAf8C3wH3AYABAQH/AcEB/wHfAv8BgAEBAf8B4wH/Ad8BgAEBAYABAQH/AfcB/wEH
        AgABgAEBAv8B/AHZBAAB/wGPAfMBjgIAAYABAQH/AQcB9wEHAgABwAEDAQEBBwHuAQMCAAG1AbcBAQEH
        AZ4BAwIAAdUBVwGDAY8BfgEDAgABsQFTAccB/wH+AQMBgAEBAdUBswHvAv8BBwGDAcEB6wH/AfMB1wHA
        AQMBAQGAAesB/wHxAdcBgAIBAYAB6wHnAQAB1wIAAQEBgAHrAeMBAAFXAgABgwHBAfcBAQEAAW8CAAGD
        AcEB9wIAAe8CAAHXAesB9wEAAfEB7wIAAv8BwQEBAfMBgwGAAQEB/wHPATYBYwH+AWwBwAEDAf8BxwHj
        AecB/wHHAcABAwGAAQMBwQL/AYMBwAEDAYABAQGAAv8BAQHAAQMBgAEBAYAC/wEBAeABBwGAAQMBgAL/
        AQEB/QG/Af8BxwGAAv8BAQH6AV8B/wHPAcEC/wGDAf0BvwH4AR8B/gF/BP8B8AEPAfwBPwH4AT8C/wHA
        AQMB+AEfAfgBPwL/AcABAwHwAQ8B+AE/Av8BgAEBAfEBBwH4AT8C/wIAAfMBgwH4AT8EAAH3AcEBAAEB
        BAAB/wHgAQABAQQAAf8B8AEAAQEEAAGAAXgBAAEBBQABfAEAAQEC/wGAAQEBAAH+AfgBPwL/AcABAwL/
        AfgBPwL/AcABAwGAAX8B+AE/Av8B8AEPAQABfwH4AT8C/wH4AR8BAAH/AfgBPwL/Cw==
</value>
  </data>
</root>